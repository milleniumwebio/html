{"remainingRequest":"/Users/wqi3/Documents/GitHub/html/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/wqi3/Documents/GitHub/html/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/wqi3/Documents/GitHub/html/docs/nyu/creativecoding/003_Dance.md?vue&type=template&id=15f82171&","dependencies":[{"path":"/Users/wqi3/Documents/GitHub/html/docs/nyu/creativecoding/003_Dance.md","mtime":1601442183717},{"path":"/Users/wqi3/Documents/GitHub/html/node_modules/cache-loader/dist/cjs.js","mtime":1600070943974},{"path":"/Users/wqi3/Documents/GitHub/html/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1600070946946},{"path":"/Users/wqi3/Documents/GitHub/html/node_modules/cache-loader/dist/cjs.js","mtime":1600070943974},{"path":"/Users/wqi3/Documents/GitHub/html/node_modules/vue-loader/lib/index.js","mtime":1600070946945},{"path":"/Users/wqi3/Documents/GitHub/html/node_modules/@vuepress/markdown-loader/index.js","mtime":1600070943655}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxDb250ZW50U2xvdHNEaXN0cmlidXRvciA6c2xvdC1rZXk9IiRwYXJlbnQuc2xvdEtleSI+PGgyIGlkPSJmbGFwcHktcGFydHktcGFycm90Ij48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI2ZsYXBweS1wYXJ0eS1wYXJyb3QiPiM8L2E+IEZsYXBweSBQYXJ0eSBQYXJyb3Q8L2gyPgo8cD5XaGVuIEkgZmlyc3Qgc2F3IHRoZSBhc3NpZ25tZW50IHJlcXVpcmVtZW50IGFib3V0IHRoZSBwYXJ0eSwgdGhlIGZpcnN0IHRoaW5nIGNhbWUgdG8gbXkgbWluZCBpcyBwYXJ0eSBwYXJyb3QuPC9wPgo8cD48aW1nIHNyYz0iaHR0cHM6Ly9jdWx0b2Z0aGVwYXJ0eXBhcnJvdC5jb20vcGFycm90cy9oZC9taWRkbGVwYXJyb3QuZ2lmIiBhbHQ9IiI+PGltZyBzcmM9Imh0dHBzOi8vY3VsdG9mdGhlcGFydHlwYXJyb3QuY29tL3BhcnJvdHMvaGQvb3BlbnNvdXJjZXBhcnJvdC5naWYiIGFsdD0iIj48L3A+CjxibG9ja3F1b3RlPgo8cD5HaWYgZnJvbSBodHRwczovL2N1bHRvZnRoZXBhcnR5cGFycm90LmNvbS8gIG9wZW4tc291cmNlIFBhcnJvdDwvcD4KPC9ibG9ja3F1b3RlPgo8cD5TbyBJIGRlY2lkZWQgdG8gZG8gdGhpcyBGbGFwcHkgUGFydHkgUGFycm90IGZvciB0aGlzIGFzc2lnbm1lbnQuPC9wPgo8cD48YSBocmVmPSJodHRwczovL2VkaXRvci5wNWpzLm9yZy9pcndpbmNoeWkvc2tldGNoZXMvWkppU3Fla0Z4IiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciBub3JlZmVycmVyIj5odHRwczovL2VkaXRvci5wNWpzLm9yZy9pcndpbmNoeWkvc2tldGNoZXMvWkppU3Fla0Z4PE91dGJvdW5kTGluay8+PC9hPjwvcD4KPGgyIGlkPSJyZWFkaW5nIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI3JlYWRpbmciPiM8L2E+IFJlYWRpbmc8L2gyPgo8cD5JIHJlbWVtYmVyIHRoZSBmaXJzdCBsZXNzb24gb2YgQ29tbXVuaWNhdGlvbiAxMDEgd2UgbGVhcm5lZCAmcXVvdDtUaGUgbWVkaXVtIGlzIHRoZSBtZXNzYWdlJnF1b3Q7IGJ5IE1jTHVoYW4uPC9wPgo8cD5JIG5ldmVyIGVudmlzaW9uZWQgdGhhdCBzb21lZGF5IHRoZSBwcm9ncmFtbWluZyBsYW5ndWFnZSBjb3VsZCBiZSBleGFtaW5lZCB1c2luZyB0aGUgY29tbXVuaWNhdGlvbiBwaGlsb3NvcGh5IHVudGlsIHRvZGF5LiBJIGVzcGVjaWFsbHkgbG92ZSBoaXMgZXhwbGFuYXRpb25zIG9mICZxdW90O3lvdSBoYXZlIHRvIGJlY29tZSB0aGUgbWVkaXVtIGlmIHlvdSB1c2UgaXQuJnF1b3Q7IEl0IGlzIGJyaWxsaWFudCB0byBjb21wYXJlIGhvdyBvdXIgYnJhaW4gcHJvY2Vzc2VzIHRoZSBtZXNzYWdlIGFuZCBjb21wYXJlIHRoYXQgdG8gdGhlIG9iamVjdC1vcmllbnRlZCBtZXRob2QuPC9wPgo8cD5BZnRlciByZWFkaW5nIHRoaXMgcGFwZXIsIGZldyBrZXl3b3JkcyBzdGljayB0byBteSBoZWFkOiAgPHN0cm9uZz5wb2x5bW9ycGhpc208L3N0cm9uZz4gYW5kIDxzdHJvbmc+ZW5jYXBzdWxhdGlvbjwvc3Ryb25nPi48L3A+CjxoNCBpZD0icG9seW1vcnBoaXNtIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI3BvbHltb3JwaGlzbSI+IzwvYT4gUG9seW1vcnBoaXNtPC9oND4KPHA+SG93IG91ciBicmFpbiB0cmVhdCBvdmVyd2hlbG1lZCBpbmZvcm1hdGlvbiBlZmZpY2llbnRseT88L3A+CjxwPldlIGNhdGVnb3JpemUgdGhlbS4gSW4gYSBwcm9ncmFtbWluZyBsYW5ndWFnZSwgaXQgaXMgYm90aCBjYXRlZ29yaXplIGJ1dCBsZWF2ZXMgdGhlIGFiaWxpdHkgdG8gdHJlYXQgdGhlbSBpbiB0aGUgaW5kaXZpZHVhbCBjb250ZXh0LiBJbiBraW5kZXJnYXJ0ZW4sIEkgbGVhcm5lZCBmcnVpdCwgd2hpY2ggaW5jbHVkZXMgYXBwbGUsIGJhbmFuYSwgd2F0ZXJtZWxvbiwgZXRjLiBJdCdzIGVhc2llciBmb3IgdXMgdG8gcmVtZW1iZXIgYW5kIGRpc3Rpbmd1aXNoIGJldHdlZW4gZnJ1aXQgb3IgdmVnZXRhYmxlcy4gQnV0IHdlIHRyZWF0IHRoZW0gYWxsIGFzIGZydWl0IGJ1dCBhbHNvIGV2YWx1YXRlIHRoZSBpdGVtIGluZGl2aWR1YWxseS48L3A+CjxwPldoZW4gd2UgdGFsayBhYm91dCB0aGUgZGlldCwgd2UgbmVlZCB0byBlYXQgbW9yZSBmcnVpdCwgYW5kIHdlIHRyZWF0IHRoZSBmcnVpdCBhcyBhIGNhdGVnb3J5LiBXZSBkb24ndCBuZWVkIHRvIGNhcmUgd2hhdCBraW5kIG9mIGZydWl0IG9yIHdoYXQgZnJ1aXQgd2UgbmVlZCB0byBlYXQsIGFzIGxvbmcgYXMgaXQgaXMgZnJ1aXQuIEluIGEgcHJvZ3JhbW1pbmcgbGFuZ3VhZ2UsIGl0IHNpbXBsaWZpZXMgdGhlIGxvZ2ljIGFuZCBpbmNyZWFzZXMgdGhlIHByb2R1Y3Rpdml0eSB0byBkZWFsIHdpdGggcmVkdW5kYW50IGNvbXB1dGluZy4gVGhlIHNhbWUgbWV0aG9kIGFuZCBjb250ZW50IGFyZSBldmVyeXdoZXJlLjwvcD4KPGg0IGlkPSJlbmNhcHN1bGF0aW9uIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI2VuY2Fwc3VsYXRpb24iPiM8L2E+IEVuY2Fwc3VsYXRpb248L2g0Pgo8cD5SZXVzZSwgZXhwYW5kYWJpbGl0eSwgYW5kIGZsZXhpYmlsaXR5LDwvcD4KPHA+UGxlYXNlIGFsbG93IG1lIHRvIGV4cGxhaW4gdGhlIGVuY2Fwc3VsYXRpb24gdXNpbmcgbXkgb3duIHdvcmQuIEl0IGhlbHBzIG1lIHRvIHVuZGVyc3RhbmQgaXQgYmV0dGVyLiBJdCBtZWFucyB5b3UgZG9uJ3QgbmVlZCB0byBrbm93IGhvdyB0aGlzIGZ1bmN0aW9uIHdvcmtzLCB3aGF0J3MgaW5zaWRlIGl0LiBZb3UgY2FuIGp1c3QgdXNlIGl0LjwvcD4KPHA+V2UgbGVhcm5lZCBudW1lcm91cyBmb3JtdWxhcyBsaWtlIGNhbGN1bGF0aW5nIGdyYXZpdHkgYW5kIHVzaW5nIEcgYXMgdW5pdmVyc2FsIGdyYXZpdGF0aW9uIGNvbnN0YW50IGJhY2sgdG8gaGlnaCBzY2hvb2wgbWF0aGVtYXRpY3Mgb3IgcGh5c2ljcyBjbGFzcy4gVW50aWwgdG9kYXksIEkgc3RpbGwgZG9uJ3QgdW5kZXJzdGFuZCBob3cgRyBpcyBjYWxjdWxhdGVkIGFuZCB0aGUgc2NpZW50aWZpYyBtZXRob2QgYmVoaW5kIGl0LiBJIGp1c3QgdXNlIGl0LiBXaGVuIHdlIHRoaW5rIHRoZSBjb21wbGV4IG1hdGhlbWF0aWNhbCBwcm9ibGVtIGxpa2UgdGhpcywgd2Ugc2ltcGxpZnkgYnkgdXNpbmcgdGhlIGZvcm11bGEsIGVxdWF0aW9uLCBmdW5jdGlvbnMuIFRoZSBlcXVhdGlvbiBpcyBoaWRpbmcgaXRzIHByb2Nlc3MgYW5kIGFwcHJvYWNoZXMsIGJ1dCB3ZSB1c2UgaXQgYXMgYSB3aG9sZS48L3A+CjxwPk1lZGl1bSBpcyB0aGUgbWVzc2FnZTsgcmV2ZXJzZWx5LCB0aGUgbWVzc2FnZSBpdHNlbGYgaXMgYW5vdGhlciBmb3JtIG9mIG1lZGl1bS4gVGhpcyBvbmlvbiBvciBSdXNzaWFuIERvbGwtbGlrZSBzdHJ1Y3R1cmUgaW50ZXJ3ZWF2ZXMgaXRzZWxmLiBTaW5jZSB0aGUgb2JqZWN0IG9yaWVudGF0aW9uIGhhcyB0aGUgc2FtZSBlc3NlbnRpYWwgaW5oZXJlbmNlLCBpdCBpcyBtZXNzYWdlLCBzbyBpdCBpcyBtZWRpdW0uPC9wPgo8aDQgaWQ9IndoZXJlLWlzLXRoZS1mdXR1cmUiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjd2hlcmUtaXMtdGhlLWZ1dHVyZSI+IzwvYT4gV2hlcmUgaXMgdGhlIGZ1dHVyZT88L2g0Pgo8cD5JZiB3ZSB6b29tIG91dCB0byBhIGJpZ2dlciBzY2FsZSwgaXNuJ3QgYSBsb3Qgb2YgbW9kdWxhcml6ZWQgcHJvZHVjdCBzaW1pbGFyIHRvIHRoZSBpbnRlbGxlY3Rpb24gYXMgb2JqZWN0IG9yaWVudGF0aW9uPzwvcD4KPHA+SW4gQWx0J3MgcGFwZXIsIGhlIGRlZmluZWQgdGhlIG9iamVjdCBvcmllbnRhdGlvbiBhczo8L3A+CjxibG9ja3F1b3RlPgo8cD4mcXVvdDsuLi5Gb3IgbW9kZWxpbmcgaGlnaGx5IGNvbXBsZXggc3lzdGVtIGFzIHNtYWxsZXIgaW50ZXJhY3RpbmcgZWxlbWVudHMgdGhhdCBhcmUgZmluaXRlbHkgY29tcHVhYmxlLiZxdW90OzwvcD4KPC9ibG9ja3F1b3RlPgo8cD5Nb3Rvcm9sYSByZWxlYXNlZCBpdHMgZmlyc3QgbW9kdWxhcml6ZWQgaW4gMjAxNi4gSXQgaGFzIGEgbG90IG9mIGRpZmZlcmVudCBtb2RzIHlvdSBjYW4gcHVyY2hhc2UgbGF0ZXIgYWZ0ZXIgeW91IGhhdmUgdGhlIHBob25lLiBUaGV5IHJlbGVhc2UgdGhlaXIgcGFydG5lcnMgbGlrZSBKQkwgc291bmRib3gsIFBvbGFyb2lkIHBob3RvIHByaW50ZXIsIEFsZXhhIHNtYXJ0IHNwZWFrZXIsIGFuZCBzbyBtYW55IG1vcmUuPC9wPgo8cD5EZXNwaXRlIHRoZSByZWFzb24gYmVoaW5kIGl0LCB0aGUgcHJvamVjdCBkZWFkIGFmdGVyIGEgY291cGxlIG9mIHllYXJzLCB0aGlzIHByb2R1Y3QgaXMgc3RpbGwgYW4gZXhjZWxsZW50IGV4YW1wbGUgb2YgdGhlIG1pbmRzZXQgdGhhdCBjYW1lIGZyb20gb2JqZWN0LW9yaWVudGF0aW9uLiBCdXQgcGVvcGxlIHdobyBhcmUgZGVzaWduaW5nIG1vZHVsYXIgcGhvbmVzIGFsd2F5cyBoYXZlIHRoZSBtaW5kc2V0IG9mIHRoZSBvYmplY3Qgb3JpZW50YXRpb24uPC9wPgo8cD5Gb3IgbWUgcGVyc29uYWxseSwgdGhlIG1pbmRzZXQgb2YgT08gbWVhbnMgcGFjayB0aGluZ3MgZm9yIGZ1dHVyZSByZWZlcmVuY2UgYW5kIHJldXNlLiBJbiB0aGUgcGFzdCwgdGhlcmUgaXMgc28gbWFueSBpbmNpZGVudHMgSSBuZWVkIHNvbWUgaW1hZ2UsIHNvIEkgR29vZ2xlZCBpdCBhbmQgZG93bmxvYWRlZCBpdC4gSSB1c2VkIGl04oCUdGhlIGVuZCBvZiB0aGUgc3RvcnkuIFdoZW4gdGhlcmUgaXMgbmV4dCB0aW1lIEkgaGF2ZSB0byB1c2Ugc2ltaWxhciBwaG90b3MsIGV2ZW4gdGhlIHNhbWUgb25lLCB0aGUgd2hvbGUgcHJvY2VzcyBiZWdpbnMgYWdhaW4uIE9yIEkgaGF2ZSBhIGJpZyBQU0QsIG1heWJlIDJnaWcsIGFuZCBJIGp1c3QgbmVlZCBvbmUgaWNvbiBmcm9tIHRoaXMgZmlsZS4gSSB1c2UgbXkgbGFwdG9wIHRvIG9wZW4gaXQsIHdhaXQgMiBtaW51dGVzIHVudGlsIGl0IGlzIGxvYWRlZCwgYW5kIG9wZW4gaXQgdXAsIHRoZW4gdXNlIDUgc2Vjb25kcyB0byBleHBvcnQgdGhlIGljb24gZnJvbSB0aGlzIGRvY3VtZW50LiBJZiBJIGNyZWF0ZSBhbiBpY29uIHBhY2sgZm9yIHJldXNlIHByb3Bvc2VzLCBJIGRvbid0IG5lZWQgdG8gb3BlbiB0aGUgZ2lhbnQgcGhvdG9zaG9wIGZpbGUgdG8gbG9vayBhZnRlciBpdC48L3A+CjxwPkZvciBtZSwgdGhpcyBwYXBlciBpcyBsaWtlIGEgdGltZSBtYWNoaW5lOyBhbHNvIGxpa2UgYSBtaWNyb3Njb3BlIHRvIGxvb2sgaW5zaWRlIHRob3NlIGJyaWxsaWFudCBjb21wdXRlciBzY2llbnRpc3RzLiBVbml0eSBhbmQgVW5yZWFsIGVuZ2luZSwgbm93IGFsbCBpcyB3b3JraW5nIG9uIHRoZSBtb2R1bGl6ZWQgcHJvZ3JhbSBsYW5ndWFnZS4gSmF2YSwgQysrIGlzIGZhaXJseSBuZXcsIGJ1dCBpdCB3aWxsIGJlY29tZSBwYXN0IHRlbnNlLiAgV2lsbCB0aGUgZnV0dXJlIG9mIHByb2dyYW1taW5nIGJlIG1vZHVsYXI/PC9wPgo8L0NvbnRlbnRTbG90c0Rpc3RyaWJ1dG9yPgo="},null]}